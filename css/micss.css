@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}


header {
    display: flex;
    justify-content: space-between; /* Distribuye los items a la misma distancia y no deja espacio exterior ni en el primer ni en el último flex-item. */

    position: absolute;
    top: 0;
    left: 0;

    width: 100%;

    padding: 40px 100px;

    z-index: 10000;

    transition: .6s;
}

header .logo {
    position: relative;

    font-size: 2em;
    font-weight: 700;

    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 2px;

    color: yellow;

    transition: .6s;
}

/* El botón de 2 rayas ------------------------------------------------------------------- */

/* Define primero el contenedor */
header #toggle {
    position: relative; /* Es necesario ponerlo, porque luego en el "before" y "after" se pone "position: absolute;" , el cual es respecto a este "position: relative" */

    width: 30px;
    height: 30px;

    cursor: pointer;

    /* background-color: cornflowerblue; */ /* DEBUG */
}

/* Raya de arriba */
header #toggle::before {
    content: '';

    position: absolute;
    top: 7px; /* 7 pixels desde la parte superior de su contenedor padre = #toggle */

    width: 100%; /* El 100% de su contenedor padre = "#toggle" */
    height: 4px;

    background: yellow;
}

/* Raya de abajo */
header #toggle::after {
    content: '';
    
    position: absolute;
    bottom: 7px;

    width: 100%;
    height: 4px;

    background: yellow;
}
/* El botón de 2 rayas ------------------------------------------------------------------- */

/* El botón de 2 rayas , cuando se transforma en X --------------------------------------- */
.banner.active header #toggle::before {
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%) rotate(45deg);
}

.banner.active header #toggle::after {
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%) rotate(-45deg);
}
/* El botón de 2 rayas , cuando se transforma en X --------------------------------------- */


.banner {
    display: flex;
    align-items: center;

    position: relative;

    width: 100%;
    min-height: 100vh;

    padding: 100px;

    background: url("../img/bg.jpg");
    background-size: cover;

    z-index: 2; /* La pantalla negra principal por encima de la pantalla azul del menu de opciones. */

    transition: .5s;
}

/* Cuando se haya pulsado el botón de las 2 rayas, mover hacia la izquierda la página, y dejar espacio a la derecha para el menu de opciones. */
.banner.active {
    transform: translateX(-400px);
}


#navigation {
    display: grid;
    place-items: center;

    position: fixed;
    top: 0;
    right: -200px; /* (o -400) */

    width: 400px;
    height: 100vh;

    background: darkblue;

    z-index: 1;

    transition: .5s;
}

#navigation.active {
    right: 0;
}

/* Lo ha puesto pero en teoría no se necesita = no hace nada, ya que lo está haciendo el "display: grid" anterior -------- */
#navigation ul {
    display: flex;
    flex-direction: column; /* main axis vertical, de arriba abajo. */

    position: relative;
}
/* Lo ha puesto pero en teoría no se necesita = no hace nada, ya que lo está haciendo el "display: grid" anterior -------- */


#navigation ul li {
    list-style: none; /* Quita los puntos a los <li> */
}

#navigation ul li a {
    display: inline-block;

    font-size: 2em;
    font-weight: 600;

    text-decoration: none; /* Quita el subrayado a las <a> */
    text-transform: uppercase;

    color: #fff;
}


/* ------------------------------------------------------------------------------ */

/* Primero define el contenedor */
.content {
    max-width: 600px;
}

/* Y ahora sus elementos hijos: items */
.content h2 {
    font-size: 2.5em;

    color: #fff;
}

.content h2 span {
    font-size: 1.2em;

    color: #40c3ff;
}

.content p {
    font-size: 1.2em;
    font-weight: 300;

    color: #fff;
}

.content a {
    display: inline-block;

    position: relative;

    margin-top: 20px;

    padding: 10px 30px;

    font-size: 1.2em;
    font-weight: 500;

    text-decoration: none;

    background: #fff;
    color: #000;
}


/* Primero define el contenedor */
.sci {
    display: flex;
    flex-direction: column; /* main axis vertical, de arriba abajo. */

    position: absolute; /* Posicionado con respecto a su ancestro posicionado más cercano = <section> */
    right: 100px;
}

/* Y ahora sus elementos hijos: items */
.sci li {
    list-style: none; /* Quita los puntos a los <li> */
}

/* Este item pasa a ser contenedor de sus items internos: <img> . Define el contenedor. */
.sci li a {
    display: grid;
    place-items: center;

    position: relative;

    width: 50px;
    height: 50px;

    margin: 10px 0 0; /* top ; right/left ; bottom */

    border: 2px dotted red;

    text-decoration: none;
}

.sci li a:hover {
    background: #fff;
}

.sci li a img {
    max-width: 20px;

    /* The filter property defines visual effects (like blur and saturation) to an element (often <img>). */
    filter: invert(1); /* Inverts the samples in the image. 100% = 1 will make the image completely inverted. */

    /* La propiedad CSS mix-blend-mode describe cómo el contenido de un elemento debe mezclarse con el contenido del elemento que está tras él y con el fondo del elemento. */
    mix-blend-mode: difference;
}


/* --------------------------------------------------------------------------------------------------------------------------------- */
/* DISEÑO RESPONSIVE */
/* --------------------------------------------------------------------------------------------------------------------------------- */

/* Así lo pone el tío, pero ese punto de ruptura no va bien: antes de ese punto ya se sobreponen los iconos de redes sociales con el texto. */
/* @media (max-width: 767px) { */ 

@media (max-width: 860px) { /* Así queda bien. */

    header {
        padding: 20px 50px;
    }

    .banner {
        padding: 100px 50px 150px; /* top ; right/left ; bottom */
    }

    .banner h2 {
        font-size: 1.8em;
    }

    .banner .content p,
    .banner .content a {
        font-size: 1em;
    }

    .banner.active {
        transform: translateX(-250px);
    }


    #navigation {
        width: 250px;
    }

    #navigation ul li a {
        margin: 5px 0;

        font-size: 1.5em;
    }


    .sci {
        /*  (valor por defecto). main axis horizontal, de izquierda a derecha. 
        
            Lo tenía puesto a "column" en diseño normal. 
            
            Sólo con esta instrucción , pone los 3 iconos cuadrados de redes sociales , en horizontal.
        */
        flex-direction: row; 

        position: absolute; /* Posicionado con respecto a su ancestro posicionado más cercano = <section> */
        bottom: 50px;
        right: initial; /* Sets this property to its default value. */  /* Que es "auto" = Lets the browser calculate the right edge position. */ 
    }

    .sci li a {
        margin: initial; /* margin: 10px 0 0; top-right/left-bottom */ /* Que es como está definido en el diseño normal. */
        margin-right: 10px;
    }

}











